import requests
import logging
from datetime import datetime
from config import USER_ID
from auth import load_token
from llm import llm_transform

logger = logging.getLogger(__name__)

def fetch_homeworks():
    BEARER_TOKEN = load_token()
    if not BEARER_TOKEN:
        logger.warning("üîí –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –º–æ–π –í–ª–∞–¥—ã–∫–∞...")
        return "‚ùå –¢–æ–∫–µ–Ω —É—Ç—Ä–∞—á–µ–Ω –≤ –±–µ–∑–¥–Ω–µ..."

    url_schedule = 'https://diaryapi.kiasuo.ru/diary/api/schedule'

    headers = {
        'Authorization': f'Bearer {BEARER_TOKEN}',
        'Accept': 'application/json'
    }

    today = datetime.now()
    week_number = today.isocalendar()[1]
    year = today.year
    params_schedule = {'id': USER_ID, 'week': str(week_number), 'year': str(year)}

    try:
        logger.info("üìÖ –ó–∞–ø—Ä–∞—à–∏–≤–∞—é —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å –¥–æ–º–∞—à–∫–∞–º–∏...")
        resp = requests.get(url_schedule, headers=headers, params=params_schedule, timeout=10)
        resp.raise_for_status()
        data = resp.json()

        schedule = data.get('schedule', [])
        homeworks_data = data.get('homeworks', [])

        logger.info("üóì –ü–æ–ª—É—á–µ–Ω–æ %s —É—Ä–æ–∫–æ–≤ –∏ %s –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π.", len(schedule), len(homeworks_data))

        # –ú–∞–ø–∏–º –¥–æ–º–∞—à–∫–∏ –ø–æ id –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞
        homeworks_map = {hw['id']: hw for hw in homeworks_data}

        # –°–æ–±–∏—Ä–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ–º–∞—à–Ω–∏—Ö –∑–∞–¥–∞–Ω–∏–π —Å –¥–∞—Ç–∞–º–∏ –∏ –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏
        homeworks_list = []

        for lesson in schedule:
            lesson_date = lesson.get('lesson_date')
            subject = lesson.get('subject', '–ü—Ä–µ–¥–º–µ—Ç')
            hw_ids = lesson.get('homework_to_check_ids', [])
            for hw_id in hw_ids:
                hw = homeworks_map.get(hw_id)
                if hw:
                    text = hw.get('text', '–ë–µ–∑ –∑–∞–¥–∞–Ω–∏—è').strip()
                    if text and text.lower() not in ('–±–µ–∑ –∑–∞–¥–∞–Ω–∏—è', '–Ω–µ—Ç –∑–∞–¥–∞–Ω–∏—è', '–Ω–µ—Ç –¥–∑', ''):
                        homeworks_list.append({
                            'lesson_date': lesson_date,
                            'subject': subject,
                            'task': text
                        })

        if not homeworks_list:
            return "‚ùå –î–ó –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –º–æ–π –í–ª–∞–¥—ã–∫–∞."

        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
        report = llm_transform(homeworks_list)
        return report

    except Exception as e:
        logger.error("üí£ –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö: %s", e, exc_info=True)
        return "‚ö†Ô∏è –î–µ–º–æ–Ω—ã –ø–∞—Ä—Å–∏–Ω–≥–∞ –≤–æ—Å—Å—Ç–∞–ª–∏! –û—à–∏–±–∫–∞."